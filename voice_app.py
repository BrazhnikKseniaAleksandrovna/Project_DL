import streamlit as st
import torch
import librosa
import numpy as np
import sounddevice as sd
from scipy.io.wavfile import write
from transformers import Wav2Vec2ForCTC, Wav2Vec2Processor
from fuzzywuzzy import process

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
@st.cache_resource(show_spinner=True)
def load_asr_model():
    processor = Wav2Vec2Processor.from_pretrained("jonatasgrosman/wav2vec2-large-xlsr-53-russian")
    model = Wav2Vec2ForCTC.from_pretrained("jonatasgrosman/wav2vec2-large-xlsr-53-russian")
    model.eval()
    return processor, model

processor, model = load_asr_model()

commands = ["–ª–µ–≤–æ", "–ø—Ä–∞–≤–æ", "–≤–≤–µ—Ä—Ö", "–≤–Ω–∏–∑", "—Å—Ç–æ–ø", '–≤–µ—Ä—Ö']
st.title("üéÆ 2D –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º")

# –ü–æ–∑–∏—Ü–∏–∏
if "x" not in st.session_state:
    st.session_state.x = 50
if "y" not in st.session_state:
    st.session_state.y = 50
if "gif_url" not in st.session_state:
    st.session_state.gif_url = None

# –ì–∏—Ñ–∫–∏
IDLE_GIF = 'https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/387209d24721c82f8a2da74338353e39df081271a162e904e75d79ca3efb9e0e.gif'
WALK_LEFT_GIF = 'https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/387209d24721c82f8a2da74338353e39df081271a162e904e75d79ca3efb9e0e.gif'
WALK_RIGHT_GIF = 'https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/387209d24721c82f8a2da74338353e39df081271a162e904e75d79ca3efb9e0e.gif'
WALK_UP_GIF = 'https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/387209d24721c82f8a2da74338353e39df081271a162e904e75d79ca3efb9e0e.gif'
WALK_DOWN_GIF = 'https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/387209d24721c82f8a2da74338353e39df081271a162e904e75d79ca3efb9e0e.gif'
STOP_GIF = 'https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/387209d24721c82f8a2da74338353e39df081271a162e904e75d79ca3efb9e0e.gif'

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
def move_character(command):
    if command == "–ª–µ–≤–æ":
        st.session_state.x = max(0, st.session_state.x - 25)
        st.session_state.gif_url = WALK_LEFT_GIF
    elif command == "–ø—Ä–∞–≤–æ":
        st.session_state.x = min(90, st.session_state.x + 25)
        st.session_state.gif_url = WALK_RIGHT_GIF
    elif command in ["–≤–≤–µ—Ä—Ö", "–≤–µ—Ä—Ö"]:
        st.session_state.y = max(0, st.session_state.y - 25)  # –î–í–ò–ñ–ï–ù–ò–ï –í–í–ï–†–• = —É–º–µ–Ω—å—à–µ–Ω–∏–µ Y
        st.session_state.gif_url = WALK_UP_GIF
    elif command == "–≤–Ω–∏–∑":
        st.session_state.y = min(90, st.session_state.y + 25)  # –î–í–ò–ñ–ï–ù–ò–ï –í–ù–ò–ó = —É–≤–µ–ª–∏—á–µ–Ω–∏–µ Y
        st.session_state.gif_url = WALK_DOWN_GIF
    elif command == "—Å—Ç–æ–ø":
        st.session_state.gif_url = STOP_GIF
    else:
        st.session_state.gif_url = IDLE_GIF

# –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
def transcribe_audio(audio_path):
    try:
        speech, sr = librosa.load(audio_path, sr=16000)
        input_values = processor(speech, sampling_rate=sr, return_tensors="pt").input_values
        with torch.no_grad():
            logits = model(input_values).logits
        predicted_ids = torch.argmax(logits, dim=-1)
        transcription = processor.decode(predicted_ids[0]).lower().strip()
        st.write(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: **{transcription}**")
        for cmd in commands:
            if cmd in transcription:
                return cmd
        return None
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞: {e}")
        return None

def transcribe_audio(audio_path):
    speech, sr = librosa.load(audio_path, sr=16000)
    input_values = processor(speech, return_tensors="pt").input_values
    
    with torch.no_grad():
        logits = model(input_values).logits
    
    predicted_ids = torch.argmax(logits, dim=-1)
    transcription = processor.decode(predicted_ids[0]).lower().strip()
    
    # –ù–µ—á—ë—Ç–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    best_match = process.extractOne(transcription, commands, score_cutoff=70)
    return best_match[0] if best_match else None

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
tab1, tab2 = st.tabs(["üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å", "üéô –ó–∞–ø–∏—Å—å"])

with tab1:
    audio_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ WAV", type=["wav"])
    if audio_file and st.button("–†–∞—Å–ø–æ–∑–Ω–∞—Ç—å"):
        st.audio(audio_file)
        command = transcribe_audio(audio_file)
        if command:
            move_character(command)
            st.success(f"–ö–æ–º–∞–Ω–¥–∞: **{command}**")

with tab2:
    if st.button("–ó–∞–ø–∏—Å–∞—Ç—å 2 —Å–µ–∫"):
        fs = 16000
        recording = sd.rec(int(2 * fs), samplerate=fs, channels=1)
        sd.wait()
        write("temp.wav", fs, recording)
        st.audio("temp.wav")
        command = transcribe_audio("temp.wav")
        if command:
            move_character(command)
            st.success(f"–ö–æ–º–∞–Ω–¥–∞: **{command}**")

st.markdown(f"""
    <div style="
        position: relative;
        width: 100%;
        height: 500px;
        background-image: url('https://i.pinimg.com/originals/f9/49/c8/f949c8139770a539f056a8383ba04825.png');
        background-size: cover;
        background-position: center;
        border: 2px solid #999;
        border-radius: 10px;
        overflow: hidden;
    ">
        <img src="{st.session_state.gif_url or IDLE_GIF}"
             style="position: absolute;
                    left: {st.session_state.x}%;
                    top: {st.session_state.y}%;
                    width: 100px;">
    </div>
""", unsafe_allow_html=True)

st.markdown("""
### üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:

1. **–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã**:
   - –í–∫–ª–∞–¥–∫–∞ "üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å" - –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ (—Ñ–æ—Ä–º–∞—Ç WAV)
   - –í–∫–ª–∞–¥–∫–∞ "üéô –ó–∞–ø–∏—Å—å" - –¥–ª—è –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞ —á–µ—Ä–µ–∑ –º–∏–∫—Ä–æ—Ñ–æ–Ω (2 —Å–µ–∫—É–Ω–¥—ã)

2. **–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã**:
   - `–ª–µ–≤–æ` - –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ª–µ–≤–æ
   - `–ø—Ä–∞–≤–æ` - –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ
   - `–≤–≤–µ—Ä—Ö`/`–≤–µ—Ä—Ö` - –¥–≤–∏–∂–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö
   - `–≤–Ω–∏–∑` - –¥–≤–∏–∂–µ–Ω–∏–µ –≤–Ω–∏–∑
   - `—Å—Ç–æ–ø` - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞

3. **–ü–æ—Å–ª–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è**:
   - –ü–µ—Ä—Å–æ–Ω–∞–∂ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–º–∞–Ω–¥–µ
   - –í—ã —É–≤–∏–¥–∏—Ç–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
""")